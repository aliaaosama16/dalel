{"version":3,"file":"src_app_modules_auth_login-register_login-register_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/login-register/login-register-routing.module.ts","./src/app/modules/auth/login-register/login-register.module.ts","./src/app/modules/auth/login-register/login-register.page.ts","./src/app/modules/auth/login-register/login-register.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginRegisterPage } from './login-register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginRegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginRegisterPageRoutingModule } from './login-register-routing.module';\n\nimport { LoginRegisterPage } from './login-register.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginRegisterPageRoutingModule,\n    TranslateModule ,\n    ReactiveFormsModule\n\n  ],\n  declarations: [LoginRegisterPage]\n})\nexport class LoginRegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LanguageService } from 'src/app/services/language/language.service';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder,\n  FormControl,\n  AbstractControl,\n  ValidatorFn,\n} from '@angular/forms';\nimport { MenuController } from '@ionic/angular';\nimport { UtilitiesService } from 'src/app/services/utilities/utilities.service';\nimport { LoginData, LoginResponse } from 'src/app/models/loginData';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.page.html',\n  styleUrls: ['./login-register.page.scss'],\n})\nexport class LoginRegisterPage implements OnInit {\n  currentlangauge: string;\n  loginData: LoginData;\n\n  showLoginPass: boolean;\n  inputLoginType: any = 'password';\n  iconLoginName: string = 'eye-off-outline';\n\n  showLRegisterPass: boolean;\n  iconRegisterName: string = 'eye-off-outline';\n  inputRegisterType: any = 'password';\n\n  showLRegisterConfirmPass: boolean;\n  iconRegisterConfirmName: string = 'eye-off-outline';\n  inputRegisterConfirmType: any = 'password';\n\n  authType: string = 'register';\n  inputFocusPerson: boolean = false;\n  inputFocusPersonIcon: string = './../../../../assets/icon/person-active.svg';\n  inputInFocusPersonIcon: string =\n    './../../../../assets/icon/person-inactive.svg';\n\n  inputFocusEmail: boolean = false;\n  inputFocusEmailIcon: string = './../../../../assets/icon/email-active.svg';\n  inputInFocusEmailIcon: string =\n    './../../../../assets/icon/email-inactive.svg';\n\n  inputFocusPhone: boolean = false;\n  inputFocusPhoneIcon: string = './../../../../assets/icon/phone-active.svg';\n  inputInFocusPhoneIcon: string =\n    './../../../../assets/icon/phone-inactive.svg';\n\n  inputFocusPassword: boolean = false;\n  inputFocusPasswordIcon: string =\n    './../../../../assets/icon/password-active.svg';\n  inputInFocusPasswordIcon: string =\n    './../../../../assets/icon/password-inactive.svg';\n\n  inputFocusConfirmPassword: boolean = false;\n  inputFocusConfirmPasswordIcon: string =\n    './../../../../assets/icon/password-active.svg';\n  inputInFocusConfirmPasswordIcon: string =\n    './../../../../assets/icon/password-inactive.svg';\n\n  public registerForm: FormGroup;\n  isRegisterSubmitted = false;\n\n  public signinForm: FormGroup;\n  isSignInSubmitted = false;\n  constructor(\n    private langaugeservice: LanguageService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private menuCtrl: MenuController,\n    private util: UtilitiesService,\n    private auth: AuthService\n  ) {\n    this.menuCtrl.enable(false, 'main');\n  }\n\n  ngOnInit() {\n    this.currentlangauge = this.langaugeservice.getLanguage();\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.registerForm = this.formBuilder.group({\n      userName: ['', [Validators.required, Validators.minLength(2)]],\n      phoneNumber: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^05/),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n          //10\n        ],\n      ],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.email,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]],\n    });\n\n    this.signinForm = this.formBuilder.group({\n      phoneNumber: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^05/),\n          Validators.minLength(10),\n          Validators.maxLength(10),\n          //10\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  authTypeChange(ev: any) {\n    console.log('Segment changed', ev.detail.value);\n  }\n\n  get registerErrorControl() {\n    return this.registerForm.controls;\n  }\n\n  get signinErrorControl() {\n    return this.signinForm.controls;\n  }\n\n  signUp() {\n    // api call for register new account\n    this.isRegisterSubmitted = true;\n    console.log(this.registerForm.value);\n    // if (!this.registerForm.valid) {\n    //   console.log('Please provide all the required values!');\n    //   return false;\n    // } else {\n    //   console.log(this.registerForm.value);\n    // }\n\n    this.router.navigateByUrl('/phone-number');\n  }\n\n  signIn() {\n    this.isSignInSubmitted = true;\n\n    console.log('signinForm : ' + JSON.stringify(this.signinForm.value));\n    if (this.signinForm.valid) {\n      this.loginData = {\n        lang: this.langaugeservice.getLanguage(),\n        phone: this.signinForm.value.phoneNumber,\n        password: this.signinForm.value.password,\n        device_id: this.util.deviceID,\n      };\n      this.util.showLoadingSpinner().then((__) => {\n        this.auth.login(this.loginData).subscribe(\n          (data: LoginResponse) => {\n            if (data.key == 1) {\n              console.log('login res :' + JSON.stringify(data));\n              this.router.navigateByUrl('/tabs/main');\n              this.auth.storeToken(data.data?.api_token);\n            } else {\n              this.util.showMessage(data.msg);\n            }\n            this.util.dismissLoading();\n          },\n          (err) => {\n            this.util.dismissLoading();\n          }\n        );\n      });\n      // return false;\n    } else {\n      return false;\n      console.log(this.signinForm.value);\n    }\n  }\n\n  forgetPassword() {\n    this.router.navigateByUrl('/password');\n  }\n\n  changAuthType(authType: string) {\n    this.authType = authType;\n  }\n\n  // change icon beside input : just for style\n  focusPerson(focusStatus: boolean) {\n    console.log('input focus' + focusStatus);\n    this.inputFocusPerson = focusStatus;\n  }\n\n  focusEmail(focusStatus: boolean) {\n    console.log('input focus' + focusStatus);\n    this.inputFocusEmail = focusStatus;\n  }\n\n  focusPhone(focusStatus: boolean) {\n    console.log('input focus' + focusStatus);\n    this.inputFocusPhone = focusStatus;\n  }\n\n  focusPassword(focusStatus: boolean) {\n    console.log('input focus' + focusStatus);\n    this.inputFocusPassword = focusStatus;\n  }\n\n  focusConfirmPassword(focusStatus: boolean) {\n    console.log('input focus' + focusStatus);\n    this.inputFocusConfirmPassword = focusStatus;\n  }\n\n  showLoginPassword() {\n    this.showLoginPass = !this.showLoginPass;\n    this.iconLoginName = this.showLoginPass ? 'eye-outline' : 'eye-off-outline';\n    this.inputLoginType = this.showLoginPass ? 'text' : 'password';\n  }\n  showRegisterPassword() {\n    this.showLRegisterPass = !this.showLRegisterPass;\n    this.iconRegisterName = this.showLRegisterPass\n      ? 'eye-outline'\n      : 'eye-off-outline';\n    this.inputRegisterType = this.showLRegisterPass ? 'text' : 'password';\n  }\n  showRegisterConfirmPassword() {\n    this.showLRegisterConfirmPass = !this.showLRegisterConfirmPass;\n    this.iconRegisterConfirmName = this.showLRegisterConfirmPass\n      ? 'eye-outline'\n      : 'eye-off-outline';\n    this.inputRegisterConfirmType = this.showLRegisterConfirmPass\n      ? 'text'\n      : 'password';\n  }\n}\n","export default \"<ion-content [ngClass]=\\\"authType=='register' ? 'bg-left' : 'bg-right' \\\">\\n  <div class=\\\"auth-login-register\\\">\\n    <div class=\\\"logo\\\">\\n      <img src=\\\"../../../../assets/images/logo.svg\\\" />\\n    </div>\\n\\n    <ion-card class=\\\"auth-container\\\">\\n      <ion-segment\\n        (ionChange)=\\\"authTypeChange($event)\\\"\\n        value=\\\"register\\\"\\n        [(ngModel)]=\\\"authType\\\"\\n      >\\n        <ion-segment-button value=\\\"register\\\" class=\\\"register-btn\\\">\\n          <ion-label>{{\\\"register\\\"|translate}}</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"signin\\\" class=\\\"signin-btn\\\">\\n          <ion-label>{{\\\"signin\\\"|translate}}</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form\\n        class=\\\"auth-form\\\"\\n        *ngIf=\\\" authType=='register'\\\"\\n        (ngSubmit)=\\\"signUp()\\\"\\n        [formGroup]=\\\"registerForm\\\"\\n      >\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusPerson ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusPerson?inputFocusPersonIcon:inputInFocusPersonIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusPerson(true)\\\"\\n            (ionBlur)=\\\"focusPerson(false)\\\"\\n            placeholder=\\\"{{'user-name'|translate}}\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"userName\\\"\\n          ></ion-input>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .userName.errors?.required\\\"\\n        >\\n          {{'please enter user name' | translate}}\\n        </div>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .userName.errors?.minlength\\\"\\n        >\\n          {{'user name should be min 2 chars long' | translate}}\\n        </div>\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusPhone ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusPhone?inputFocusPhoneIcon:inputInFocusPhoneIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusPhone(true)\\\"\\n            (ionBlur)=\\\"focusPhone(false)\\\"\\n            placeholder=\\\"{{'phone-number'|translate}}\\\"\\n            type=\\\"tel\\\"\\n            formControlName=\\\"phoneNumber\\\"\\n          ></ion-input>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .phoneNumber.errors?.required\\\"\\n        >\\n          {{'please enter phone number' | translate}}\\n        </div>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .phoneNumber.errors?.minlength\\\"\\n        >\\n          {{'phone number should be 10 numbers' | translate}}\\n        </div>\\n\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusEmail ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusEmail?inputFocusEmailIcon:inputInFocusEmailIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusEmail(true)\\\"\\n            (ionBlur)=\\\"focusEmail(false)\\\"\\n            placeholder=\\\"{{'email-address'|translate}}\\\"\\n            type=\\\"email\\\"\\n            formControlName=\\\"email\\\"\\n          ></ion-input>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .email.errors?.required \\\"\\n        >\\n          {{'please enter email' | translate}}\\n        </div>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .email.errors?.pattern \\\"\\n        >\\n          {{'please enter valid email' | translate}}\\n        </div>\\n\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusPassword ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusPassword?inputFocusPasswordIcon:inputInFocusPasswordIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusPassword(true)\\\"\\n            (ionBlur)=\\\"focusPassword(false)\\\"\\n            placeholder=\\\"{{'password'|translate}}\\\"\\n            [type]=\\\"inputRegisterType\\\"\\n            formControlName=\\\"password\\\"\\n          ></ion-input>\\n          <ion-icon (click)=\\\"showRegisterPassword()\\\"\\n          item-end\\n          color=\\\"primary\\\"\\n          [name]=\\\"iconRegisterName\\\"\\n        ></ion-icon>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted && registerErrorControl .password.errors?.required\\\"\\n        >\\n          {{'please enter password' | translate}}\\n        </div>\\n\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusConfirmPassword ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusConfirmPassword?inputFocusConfirmPasswordIcon:inputInFocusConfirmPasswordIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusConfirmPassword(true)\\\"\\n            (ionBlur)=\\\"focusConfirmPassword(false)\\\"\\n            placeholder=\\\"{{'confirm-password'|translate}}\\\"\\n            [type]=\\\"inputRegisterConfirmType\\\"\\n            formControlName=\\\"confirmPassword\\\"\\n          ></ion-input>\\n          <ion-icon (click)=\\\"showRegisterConfirmPassword()\\\"\\n          item-end\\n          color=\\\"primary\\\"\\n          [name]=\\\"iconRegisterConfirmName\\\"\\n        ></ion-icon>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isRegisterSubmitted &&  (registerErrorControl .confirmPassword.value!=registerErrorControl .password.value)\\\"\\n        >\\n          {{'both password and confirm password should be equal' | translate}}\\n        </div>\\n\\n        <ion-button expand=\\\"block\\\" type=\\\"submit\\\">\\n          <span class=\\\"auth-btn\\\"> {{ \\\"sign-up\\\"|translate}} </span>\\n        </ion-button>\\n      </form>\\n\\n      <form\\n        class=\\\"auth-form\\\"\\n        *ngIf=\\\" authType=='signin'\\\"\\n        (ngSubmit)=\\\"signIn()\\\"\\n        [formGroup]=\\\"signinForm\\\"\\n      >\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusPhone ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusPhone?inputFocusPhoneIcon:inputInFocusPhoneIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusPhone(true)\\\"\\n            (ionBlur)=\\\"focusPhone(false)\\\"\\n            placeholder=\\\"{{'phone-number'|translate}}\\\"\\n            type=\\\"tel\\\"\\n            formControlName=\\\"phoneNumber\\\"\\n          ></ion-input>\\n       \\n        </ion-item>\\n       \\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\" isSignInSubmitted && signinErrorControl.phoneNumber.errors?.required\\\"\\n        >\\n          {{'please enter phone number' | translate}}\\n        </div>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isSignInSubmitted && signinErrorControl.phoneNumber.errors?.minlength\\\"\\n        >\\n          {{'phone number should be 10 numbers' | translate}}\\n        </div>\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"inputFocusPassword ? 'focused' : 'unfocused' \\\">\\n          <ion-icon\\n            item-start\\n            color=\\\"primary\\\"\\n            src=\\\"{{inputFocusPassword?inputFocusPasswordIcon:inputInFocusPasswordIcon}}\\\"\\n          ></ion-icon>\\n          <ion-input\\n            (ionFocus)=\\\"focusPassword(true)\\\"\\n            (ionBlur)=\\\"focusPassword(false)\\\"\\n            placeholder=\\\"{{'password'|translate}}\\\"\\n            [type]=\\\"inputLoginType\\\"\\n            formControlName=\\\"password\\\"\\n          ></ion-input>\\n          <ion-icon (click)=\\\"showLoginPassword()\\\"\\n          item-end\\n          color=\\\"primary\\\"\\n          [name]=\\\"iconLoginName\\\"\\n        ></ion-icon>\\n        </ion-item>\\n\\n        <div\\n          class=\\\"error-box\\\"\\n          *ngIf=\\\"isSignInSubmitted && signinErrorControl.password.errors?.required\\\"\\n        >\\n          {{'please enter password' | translate}}\\n        </div>\\n\\n        <ion-button expand=\\\"block\\\" type=\\\"submit\\\">\\n          <span class=\\\"auth-btn\\\"> {{\\\"login\\\"|translate}} </span>\\n        </ion-button>\\n      </form>\\n    </ion-card>\\n    <div class=\\\"auth-page-rest\\\">\\n      <div *ngIf=\\\" authType=='signin'\\\">\\n        <p (click)=\\\"forgetPassword()\\\" class=\\\"forget-password\\\">\\n          {{\\\"forget-password\\\"|translate}}\\n        </p>\\n        <p (click)=\\\"changAuthType('register')\\\" class=\\\"auth-text\\\">\\n          {{\\\"register\\\"|translate}}\\n        </p>\\n      </div>\\n\\n      <div *ngIf=\\\" authType=='register'\\\">\\n        <p (click)=\\\"changAuthType('signin')\\\" class=\\\"auth-text\\\">\\n          {{\\\"have an account\\\"|translate}}\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}